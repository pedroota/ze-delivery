@use "./functions" as functions;
@use "./variables";

// Set horizontal padding.
@mixin padding-x($value) {
  padding-left: $value;
  padding-right: $value;
}

// Set vertical padding.
@mixin padding-y($value) {
  padding-bottom: $value;
  padding-top: $value;
}

// Set horizontal margin.
@mixin margin-x($value) {
  margin-left: $value;
  margin-right: $value;
}

// Set vertical margin.
@mixin margin-y($value) {
  margin-bottom: $value;
  margin-top: $value;
}

// Set font size and line height.
@mixin font-size-line-height($font-size, $line-height) {
  font-size: $font-size;
  line-height: calc($line-height / $font-size);
}

// Set width and height of the same size.
@mixin width-height($size) {
  height: $size;
  width: $size;
}

// Remove the default select appearance.
@mixin remove-select-appearance() {
  appearance: none;
  border: 0;

  &::-ms-expand {
    display: none;
  }

  &:focus {
    outline: 0;
  }
}

// Remove style from a list.
@mixin list-unstyled() {
  list-style: none;
  margin: 0;
  padding: 0;
}

// Display a list as inline.
@mixin list-inline($li-margin-right: $list-inline-padding) {
  @include list-unstyled;

  li {
    display: inline-block;

    &:not(:last-child) {
      margin-right: $li-margin-right;
    }
  }
}

// Set image as background cover.
@mixin cover($url, $position: center center) {
  background-image: url($url);
  background-position: $position;
  background-repeat: no-repeat;
  background-size: cover;
}

// Position the element and fill its parent.
@mixin position-fill($position: absolute) {
  height: 100%;
  left: 0;
  position: $position;
  top: 0;
  width: 100%;
}

// Position the element absolutely centered.
@mixin position-absolute-center() {
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
}

// Position the element absolutely center horizontal.
@mixin position-absolute-center-x() {
  left: 50%;
  position: absolute;
  transform: translateX(-50%);
}

// Position the element absolutely center vertical.
@mixin position-absolute-center-y() {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

// Similar to Bootstrap's fixed top, but with optional position.
@mixin position-top($position, $zindex: $zindex-fixed) {
  left: 0;
  position: $position;
  right: 0;
  top: 0;
  z-index: $zindex;
}

// Render a circle.
@mixin circle($width, $background-color: "") {
  @include width-height($width);

  border-radius: 100%;

  @if $background-color != "" {
    background-color: $background-color;
  }
}

// Background support for elements that use the background component.
@mixin background-support {
  position: relative;

  >.container {
    position: relative;
  }
}

// Adjust image size
@mixin image-size($size: cover) {
  height: 100%;
  object-fit: $size;
  width: 100%;
}

// Aply display in element
@mixin display-flex($align, $justify) {
  align-items: $align;
  display: flex;
  justify-content: $justify;
}

// Center element
@mixin center-block($width) {
  @include margin-x(auto);

  max-width: $width;
}

// Validate as hover
@mixin has-hover {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @content;
    }
  }
}

// Inserting line clamp in text
@mixin line-clamp($lines) {
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Breakpoint mininum width viewport
@mixin breakpoint($value) {
  // If the key exists in the map
  @if map-has-key(variables.$breakpoints, $value) {
    // Prints a media query based on the value
    @media screen and (min-width: map-get(variables.$breakpoints, $value)) {
      @content;
    }
  }
}
